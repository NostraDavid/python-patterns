[coverage:run]
branch = True
source =
    python_patterns
omit =
    */__version__.py

[coverage:paths]
source =
   src/python_patterns
   .tox/*/lib/site-packages/python_patterns
   .tox/*/lib/python*/site-packages/python_patterns
   .tox/pypy*/site-packages/python_patterns

[coverage:report]
fail_under = 90

# Pylint stuff
# W1203 (logging-fstring-interpolation) chosen practicality over minimal performance improvement
# W1201 (logging-not-lazy) same as above
# C0114 (missing-module-docstring) nobody wants module level documentation
# C0301 (line-too-long) this is already *correctly* caught by flake8, this one is erroneously identified
# C0330 (bad-continuation) does not work with bandit as bandit enforces differently
# R0201 (no-self-use) does not work nicely with class based pytest
# E0401 (import-error) Checked during tests, tooling does not install the package.
[MESSAGES CONTROL]
disable=W1203,W1201,C0114,C0330,R0201,E0401,C0301

[flake8]
max-complexity = 10
max-line-length = 88

[isort]
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
ensure_newline_before_comments = True
line_length = 88

[pytest]
junit_family=legacy

[tox]
envlist = py, report, linters

[testenv]
deps =
    coverage
    pytest
    pytest-mock
commands =
    coverage run --parallel-mode -m pytest --junit-xml=test-report.xml {posargs} -vv tests examples

[testenv:report]
deps =
    coverage
commands =
    coverage combine
    coverage report
    coverage html
    coverage xml -o coverage-report.xml

[testenv:safety]
description =
   Check whether there are security issues with dependencies.
deps =
   safety
commands =
   safety check

[testenv:bandit]
description =
    Check whether there are obvious security issues with codebase.
deps =
    bandit
commands =
    bandit -r src/tdp_gluttony/

[testenv:flake8]
description =
    Validate PEP8 compliance.
deps=
    flake8
    flake8-junit-report
    pep8-naming
    flake8-print
    flake8-colors
commands =
    flake8 --exit-zero src/ tests/
    flake8 --output-file=flake8-report.txt src/ tests/
    flake8_junit flake8-report.txt flake8-report.xml

[testenv:mypy]
description =
    Jeroens pet peef
deps=
    mypy
commands =
    mypy --ignore-missing-imports src/

[testenv:pylint]
description =
    Validate PEP8 compliance.
deps=
    pylint
commands =
    pylint -r n --ignore=pylint-report.txt,> --msg-template='\{path\}:\{line\}: [\{msg_id\}(\{symbol\}), \{obj\}] \{msg\}' --rcfile=tox.ini src/tdp_gluttony tests/ > pylint-report.txt

[testenv:black]
description =
    Validate whether black auto-formatting has been applied.
deps =
    black
commands =
    black .\src .\tests --check --diff

# https://black.readthedocs.io/en/stable/compatible_configs.html
[testenv:isort]
description =
    Validates whether the import order is pep8 compliant.
deps =
    isort
commands =
    isort src tests --check-only

[testenv:linters]
description =
    Apply various tools, see tox -a -v
skip_install = true
deps =
    {[testenv:black]deps}
    {[testenv:isort]deps}
    {[testenv:bandit]deps}
    {[testenv:pylint]deps}
    {[testenv:flake8]deps}
commands =
    {[testenv:black]commands}
    {[testenv:isort]commands}
    {[testenv:bandit]commands}
    {[testenv:pylint]commands}
    {[testenv:flake8]commands}
